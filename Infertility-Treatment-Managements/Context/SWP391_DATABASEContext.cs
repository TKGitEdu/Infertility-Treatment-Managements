// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Repositories.Models;

namespace Repositories.Context;

public partial class SWP391_DATABASEContext : DbContext
{

    public SWP391_DATABASEContext()
    {

    }
    public SWP391_DATABASEContext(DbContextOptions<SWP391_DATABASEContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Booking> Bookings { get; set; }


    public virtual DbSet<Doctor> Doctors { get; set; }

    public virtual DbSet<Examination> Examinations { get; set; }

    public virtual DbSet<Patient> Patients { get; set; }

    public virtual DbSet<PatientDetail> PatientDetails { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<Role> Roles { get; set; }

    public virtual DbSet<Service> Services { get; set; }

    public virtual DbSet<Slot> Slots { get; set; }

    public virtual DbSet<TreatmentProcess> TreatmentProcess { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Booking>(entity =>
        {
            entity.HasKey(e => e.BookingId).HasName("PK__Booking__73951ACD1593221B");

            entity.ToTable("Booking");

            entity.HasIndex(e => e.DoctorId, "IDX_Booking_DoctorID");

            entity.HasIndex(e => e.PatientId, "IDX_Booking_PatientID").IsUnique();

            entity.HasIndex(e => e.PaymentId, "IDX_Booking_PaymentID").IsUnique();

            entity.HasIndex(e => e.ServiceId, "IDX_Booking_ServiceID").IsUnique();

            entity.HasIndex(e => e.SlotId, "IDX_Booking_SlotID");

            entity.HasIndex(e => e.PatientId, "UQ__Booking__970EC347DB4A7520").IsUnique();

            entity.HasIndex(e => e.PaymentId, "UQ__Booking__9B556A5953B7A25F").IsUnique();

            entity.HasIndex(e => e.ServiceId, "UQ__Booking__C51BB0EBFC810F4B").IsUnique();

            entity.Property(e => e.BookingId).HasColumnName("BookingID");
            entity.Property(e => e.CreateAt).HasColumnType("datetime");
            entity.Property(e => e.DateBooking).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.DoctorId).HasColumnName("DoctorID");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.PaymentId).HasColumnName("PaymentID");
            entity.Property(e => e.ServiceId).HasColumnName("ServiceID");
            entity.Property(e => e.SlotId).HasColumnName("SlotID");

            entity.HasOne(d => d.Doctor).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.DoctorId)
                .HasConstraintName("FK__Booking__DoctorI__3E52440B");

            entity.HasOne(d => d.Patient).WithOne(p => p.Booking)
                .HasForeignKey<Booking>(d => d.PatientId)
                .HasConstraintName("FK__Booking__Patient__3B75D760");

            entity.HasOne(d => d.Payment).WithOne(p => p.Booking)
                .HasForeignKey<Booking>(d => d.PaymentId)
                .HasConstraintName("FK__Booking__Payment__3D5E1FD2");

            entity.HasOne(d => d.Service).WithOne(p => p.Booking)
                .HasForeignKey<Booking>(d => d.ServiceId)
                .HasConstraintName("FK__Booking__Service__3C69FB99");

            entity.HasOne(d => d.Slot).WithMany(p => p.Bookings)
                .HasForeignKey(d => d.SlotId)
                .HasConstraintName("FK__Booking__SlotID__3F466844");
        });

        modelBuilder.Entity<Doctor>(entity =>
        {
            entity.HasKey(e => e.DoctorId).HasName("PK__Doctor__2DC00EDF9DFA0F48");

            entity.ToTable("Doctor");

            entity.Property(e => e.DoctorId)
                .ValueGeneratedOnAdd()
                .HasColumnName("DoctorID");
            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.DoctorName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Specialization)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.User)
                .WithOne(p => p.Doctor)
                .HasForeignKey<Doctor>(d => d.UserId)
                .HasConstraintName("FK__Doctor__UserID__2A4B4B5E");
        });

        modelBuilder.Entity<Examination>(entity =>
        {
            entity.HasKey(e => e.ExaminationId).HasName("PK__Examinat__C4A924C0FD55EE46");

            entity.ToTable("Examination");

            entity.HasIndex(e => e.BookingId, "UQ__Examinat__73951ACC533DCE8D").IsUnique();

            entity.Property(e => e.ExaminationId).HasColumnName("ExaminationID");
            entity.Property(e => e.BookingId).HasColumnName("BookingID");
            entity.Property(e => e.CreateAt).HasColumnType("datetime");
            entity.Property(e => e.ExaminationDate).HasColumnType("datetime");
            entity.Property(e => e.ExaminationDescription)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Result)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Booking).WithOne(p => p.Examination)
                .HasForeignKey<Examination>(d => d.BookingId)
                .HasConstraintName("FK__Examinati__Booki__4316F928");
        });

        modelBuilder.Entity<Patient>(entity =>
        {
            entity.HasKey(e => e.PatientId).HasName("PK__Patient__970EC34683B8CA60");

            entity.ToTable("Patient");

            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.Address)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.BloodType)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EmergencyPhoneNumber)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Gender)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.User).WithMany(p => p.Patients)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Patient__UserID__2F10007B");
        });

        modelBuilder.Entity<PatientDetail>(entity =>
        {
            entity.HasKey(e => e.PatientDetailId).HasName("PK__PatientD__3FE57E624693DAFA");

            entity.ToTable("PatientDetail");

            entity.Property(e => e.PatientDetailId).HasColumnName("PatientDetailID");
            entity.Property(e => e.PatientId).HasColumnName("PatientID");
            entity.Property(e => e.TreatmentStatus)
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Patient).WithMany(p => p.PatientDetails)
                .HasForeignKey(d => d.PatientId)
                .HasConstraintName("FK__PatientDe__Patie__31EC6D26");
        });

        modelBuilder.Entity<Payment>(entity =>
        {
            entity.HasKey(e => e.PaymentId).HasName("PK__Payment__9B556A586654CB2D");

            entity.ToTable("Payment");

            entity.Property(e => e.PaymentId).HasColumnName("PaymentID");
            entity.Property(e => e.BookingId).HasColumnName("BookingID");
            entity.Property(e => e.Method)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.TotalAmount).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<Role>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__Role__8AFACE3A9177D1E1");

            entity.ToTable("Role");

            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.RoleName)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Service>(entity =>
        {
            entity.HasKey(e => e.ServiceId).HasName("PK__Service__C51BB0EA41F46606");

            entity.ToTable("Service");

            entity.Property(e => e.ServiceId).HasColumnName("ServiceID");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Slot>(entity =>
        {
            entity.HasKey(e => e.SlotId).HasName("PK__Slot__0A124A4F3236A1DA");

            entity.ToTable("Slot");

            entity.Property(e => e.SlotId).HasColumnName("SlotID");
            entity.Property(e => e.EndTime)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.SlotName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.StartTime)
                .HasMaxLength(10)
                .IsUnicode(false);
        });

        modelBuilder.Entity<TreatmentProcess>(entity =>
        {
            entity.HasKey(e => e.TreatmentProcessId).HasName("PK__Treatmen__4F1D02F535DB29AC");

            entity.ToTable("TreatmentProcess");

            entity.Property(e => e.TreatmentProcessId).HasColumnName("TreatmentProcessID");
            entity.Property(e => e.Method)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PatientDetailId).HasColumnName("PatientDetailID");
            entity.Property(e => e.Result)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.PatientDetail).WithMany(p => p.TreatmentProcess)
                .HasForeignKey(d => d.PatientDetailId)
                .HasConstraintName("FK__Treatment__Patie__45F365D3");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__User__1788CCAC865EB4D2");

            entity.ToTable("User");

            entity.HasIndex(e => e.RoleId, "UQ__User__8AFACE3B368775B6").IsUnique();

            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.Address)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Gender)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Password)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Phone)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.RoleId).HasColumnName("RoleID");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Role).WithOne(p => p.User)
                .HasForeignKey<User>(d => d.RoleId)
                .HasConstraintName("FK__User__RoleID__276EDEB3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}